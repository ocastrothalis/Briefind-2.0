HTML

    <div class="dropzones">
        <div class="dropzone-top dropzone"></div>
        <div class="dropzone-left dropzone"></div>
        <div class="dropzone-right dropzone">
            <div class="navigation" draggable="true">
            <ul>
                    <li class="nav active">
                        <a href="#home">
                            <span class="icon"><ion-icon name="home-outline"></ion-icon></span>
                            <span class="text">Home</span>
                        </a>
                    </li>
                    <li class="nav">
                        <a href="#about">
                            <span class="icon"><ion-icon name="accessibility-outline"></ion-icon></span>
                            <span class="text">About</span>
                        </a>
                    </li>
                    <li class="nav">
                        <a href="#job">
                            <span class="icon"><ion-icon name="accessibility-outline"></ion-icon></span>
                            <span class="text">Job</span>
                        </a>
                    </li>
                    <li class="nav">
                        <a href="#contact">
                            <span class="icon"><ion-icon name="accessibility-outline"></ion-icon></span>
                            <span class="text">Contact</span>
                        </a>
                    </li>
                    <div class="indicator"></div>
                    <div class="menuToggle"></div>
    
                </ul>
            </div>
        </div>
        <div class="dropzone-bottom dropzone"></div>
    </div>

CSS

.dropzone-top{
        width: 100%;
        height: 70px;
        top: 0;
        position: absolute;
        display: flex;
        justify-content: center;
    }
    
    .dropzone-bottom{
        width: 100%;
        height: 75px;
        position: absolute;
        bottom: 0;
        display: flex;
        justify-content: center;
    }
    
    .dropzone-right{
        width: 70px;
        height:100%;
        position: absolute;
        right: 0;
        z-index: 99;
        display: flex;
        align-items: center;
    }
    
    .dropzone-left{
        width: 70px;
        height: 100%;
        position: absolute;
        left: 0;
        z-index: 99;
        display: flex;
        align-items: center;
    }
    
    /* Menu - Dropzone Effects */
    .status {
        width: 30px;
        height: 8px;
        background: gray;
        margin-bottom: 16px;
        border-radius: 8px;
    }
    
    .status.green {
        background: var(--yellow);
    }
    
    .status.red {
        background: red;
    }
    
    .highlight {
        background-color: #FD951F08;
    }
    
    .navigation, .dropzone {
        transition: 400ms;
    }
    
    .is-dragging {
        cursor: move;
        opacity: 0.3;
    }
    
    .over {
        background-color: #4cd13711;
    }
    
    .dropzone-top .navigation, .dropzone-bottom .navigation{
        width: 350px;
        height: 70px;
    }
    
    .dropzone-right .navigation, .dropzone-left .navigation{
        height: 350px;
        width: 70px;
    }

.dropzone-top .navigation ul, .dropzone-bottom .navigation ul{
        width: 280px;
    }
    
    .dropzone-right .navigation ul, .dropzone-left .navigation ul{
        height: 280px;
        flex-direction: column;
    }

    .dropzones{
        position: fixed;
        height: 100%;
        width: 100%;
    }

JS

const dropzones = document.querySelectorAll('.dropzone')

// Menu Position

navigations.forEach(card => {
    card.addEventListener('dragstart', dragstart)
    card.addEventListener('drag', () => {})
    card.addEventListener('dragend', dragend)
})

function dragstart() {
    dropzones.forEach( dropzone => dropzone.classList.add('highlight'))
    this.classList.add('is-dragging')
}

function dragend() {
    dropzones.forEach( dropzone => dropzone.classList.remove('highlight'))
    this.classList.remove('is-dragging')
}
dropzones.forEach( dropzone => {
    dropzone.addEventListener('dragenter', () => {})
    dropzone.addEventListener('dragover', dragover)
    dropzone.addEventListener('dragleave', () => dropzone.classList.remove('over'))
    dropzone.addEventListener('drop', () => dropzone.classList.remove('over'))
})

function dragover() {
    this.classList.add('over')

    const cardBeingDragged = document.querySelector('.is-dragging')

    this.appendChild(cardBeingDragged)
}